# 1. --- Builder Stage ---
# This stage is very similar to your existing Dockerfile.app
FROM node:18-alpine AS builder
ARG APP_NAME=frontend
WORKDIR /app

RUN npm install -g pnpm

# Copy only necessary files for dependency installation
COPY pnpm-workspace.yaml ./
COPY package.json ./
COPY pnpm-lock.yaml ./

# Copy the rest of the monorepo source code
COPY . .

# Install all dependencies for the monorepo
RUN pnpm install --frozen-lockfile

# Build only the frontend application
RUN pnpm exec turbo run build --filter=${APP_NAME}


# 2. --- Production Stage ---
# This stage uses Nginx to serve the static files produced by the build
FROM nginx:alpine
WORKDIR /usr/share/nginx/html

# Remove the default Nginx welcome page
RUN rm -rf ./*

# Copy the built frontend files from the 'builder' stage
# The build output from Vite is typically in the 'dist' folder
COPY --from=builder /app/apps/frontend/dist .

# Copy the custom Nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port 80 for the Nginx server
EXPOSE 80

# The default Nginx command starts the server. This makes it explicit.
CMD ["nginx", "-g", "daemon off;"]