
# services:
#   db:
#     image: postgres:13-alpine
#     environment:
#       POSTGRES_DB: postgres
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: mysecretpassword
#     volumes:
#       - db_data:/var/lib/postgresql/data
#     ports:
#       - "5432:5432"
#     networks:
#       - app_network
#     restart: unless-stopped

#   ws_server:
#     build:
#       context: .
#       dockerfile: Dockerfile.app  # <-- Use the new reusable Dockerfile
#       args:
#         APP_NAME: ws            # <-- Pass 'ws' as the app name
#     ports:
#       - "3001:3001"
#     environment:
#       PORT: 3001 # It's good practice to also use an env var for the port
#       DATABASE_URL: "postgresql://postgres:mysecretpassword@db:5432/postgres"
#       JWT_SECRET_KEY: "shubham123kuanar"
#     depends_on:
#       - db
#     networks:
#       - app_network
#     restart: unless-stopped

#   http_server:
#     build:
#       context: .
#       dockerfile: Dockerfile.app  # <-- Use the new reusable Dockerfile
#       args:
#         APP_NAME: http           # <-- Pass 'http' as the app name
#     ports:
#       - "3000:3000"
#     environment:
#       PORT: 3000
#       DATABASE_URL: "postgresql://postgres:mysecretpassword@db:5432/postgres"
#     depends_on:
#       - db
#     networks:
#       - app_network
#     restart: unless-stopped

# volumes:
#   db_data:

# networks:
#   app_network:
#     driver: bridge

services:
  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network
    restart: unless-stopped

  ws_server:
    build:
      context: .
      dockerfile: Dockerfile.app
      args:
        APP_NAME: ws
    ports:
      - "3001:3001"
    environment:
      PORT: 3001
      DATABASE_URL: "postgresql://postgres:mysecretpassword@db:5432/postgres"
      JWT_SECRET_KEY: "shubham123kuanar"
    depends_on:
      - db
    networks:
      - app_network
    restart: unless-stopped

  http_server:
    build:
      context: .
      dockerfile: Dockerfile.app
      args:
        APP_NAME: http
    ports:
      - "3000:3000"
    environment:
      PORT: 3000
      DATABASE_URL: "postgresql://postgres:mysecretpassword@db:5432/postgres"
    depends_on:
      - db
    networks:
      - app_network
    restart: unless-stopped

  # --- ADD THE NEW FRONTEND SERVICE HERE ---
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend  # <-- Use the new frontend Dockerfile
      args:
        APP_NAME: frontend           # <-- Pass 'frontend' as the app name
    ports:
      - "80:80" # Map host port 8080 to container port 80 (Nginx's default)
    networks:
      - app_network
    restart: unless-stopped

volumes:
  db_data:

networks:
  app_network:
    driver: bridge